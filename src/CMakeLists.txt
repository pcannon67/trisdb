cmake_minimum_required(VERSION 2.8)
project(trisdb)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")
add_executable(trisdb Config.cpp LogManager.cpp main.cpp message.pb.h QueryParser.h QueryPlanner.h Shell.h table_printer.h TcpClient.cpp TcpServer.cpp TimeUtils.cpp Tokenizer.cpp TripleMap.h TrisDb.h Config.h LogManager.h message.pb.cc QueryParser.cpp QueryPlanner.cpp Shell.cpp table_printer.cpp table_printer.tpp.h TcpClient.h TcpServer.h TimeUtils.h Tokenizer.h TrisDb.cpp Utils.h Config.cpp LogManager.cpp main.cpp message.pb.h QueryParser.h QueryPlanner.h Shell.h table_printer.h TcpClient.cpp TcpServer.cpp TimeUtils.cpp Tokenizer.cpp TripleMap.h TrisDb.h Config.h LogManager.h message.pb.cc QueryParser.cpp QueryPlanner.cpp Shell.cpp table_printer.cpp table_printer.tpp.h TcpClient.h TcpServer.h TimeUtils.h Tokenizer.h TrisDb.cpp Utils.h GenericServer.h PackedMessage.h UnixSocketServer.h UnixSocketServer.cpp UnixSocketClient.h UnixSocketClient.cpp ConfigReader.h GenericClient.h StorageEngine.h StorageEngine.cpp cxxopts.hpp)

set(CMAKE_INCLUDE_CURRENT_DIR on)
set(EXECUTABLE_OUTPUT_PATH ../dist/)
set(CMAKE_CXX_FLAGS "-O3 -DUSE_BOOST_KARMA -Wno-write-strings")
target_link_libraries(trisdb readline protobuf pthread boost_system boost_thread boost_filesystem snappy)

install(TARGETS trisdb DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)

# This is OK for deb packaging
if(DEB_PACKAGING)
	install (FILES ../utils/trisdb-init.conf DESTINATION ${CMAKE_INSTALL_PREFIX}/../etc/init/ RENAME trisdb.conf)
	install (FILES ../utils/trisdb.conf DESTINATION ${CMAKE_INSTALL_PREFIX}/../etc/trisdb/)
else()
	install (FILES ../utils/trisdb-init.conf DESTINATION /etc/init/ RENAME trisdb.conf)
	install (FILES ../utils/trisdb.conf DESTINATION /etc/trisdb/)
endif()

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
        message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()
find_package(Protobuf REQUIRED)
find_package(Boost REQUIRED)
find_package(Snappy REQUIRED)
find_package(Readline REQUIRED)
